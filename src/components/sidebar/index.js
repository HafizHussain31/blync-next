import React, { useEffect, useState } from 'react';
import { FaHome, FaChartBar, FaEnvelope, FaUsers, FaTicketAlt, FaCog } from 'react-icons/fa';
import { BsChevronBarLeft, BsChevronBarRight, BsChevronDown, BsChevronUp } from 'react-icons/bs';
import './styles.scss';
import Exported from '../../assets'
import { NavLink, useLocation } from 'react-router-dom';
import { useDispatch, useSelector } from 'react-redux';
import { saveIsCollapsed } from '../../redux/reducers/sidebarSlice';
const Sidebar = () => {

  const dispatch = useDispatch();

  const isCollapsed = useSelector((state) => state.sidebar?.isCollapsed || false)

  const [mainLinks] = useState([
    {
      to: "/main/dashboard",
      label: "Dashboard",
      Icon: (isActive) => (
        <svg width="35px" height="35px" viewBox="0 -0.5 25 25" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path fill-rule="evenodd" clip-rule="evenodd" d="M9.918 10.0005H7.082C6.66587 9.99708 6.26541 10.1591 5.96873 10.4509C5.67204 10.7427 5.50343 11.1404 5.5 11.5565V17.4455C5.5077 18.3117 6.21584 19.0078 7.082 19.0005H9.918C10.3341 19.004 10.7346 18.842 11.0313 18.5502C11.328 18.2584 11.4966 17.8607 11.5 17.4445V11.5565C11.4966 11.1404 11.328 10.7427 11.0313 10.4509C10.7346 10.1591 10.3341 9.99708 9.918 10.0005Z" stroke={isActive ? '#009BEE' : '#8a92a6'} stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
          <path fill-rule="evenodd" clip-rule="evenodd" d="M9.918 4.0006H7.082C6.23326 3.97706 5.52559 4.64492 5.5 5.4936V6.5076C5.52559 7.35629 6.23326 8.02415 7.082 8.0006H9.918C10.7667 8.02415 11.4744 7.35629 11.5 6.5076V5.4936C11.4744 4.64492 10.7667 3.97706 9.918 4.0006Z" stroke={isActive ? '#009BEE' : '#8a92a6'} stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
          <path fill-rule="evenodd" clip-rule="evenodd" d="M15.082 13.0007H17.917C18.3333 13.0044 18.734 12.8425 19.0309 12.5507C19.3278 12.2588 19.4966 11.861 19.5 11.4447V5.55666C19.4966 5.14054 19.328 4.74282 19.0313 4.45101C18.7346 4.1592 18.3341 3.9972 17.918 4.00066H15.082C14.6659 3.9972 14.2654 4.1592 13.9687 4.45101C13.672 4.74282 13.5034 5.14054 13.5 5.55666V11.4447C13.5034 11.8608 13.672 12.2585 13.9687 12.5503C14.2654 12.8421 14.6659 13.0041 15.082 13.0007Z" stroke={isActive ? '#009BEE' : '#8a92a6'} stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
          <path fill-rule="evenodd" clip-rule="evenodd" d="M15.082 19.0006H17.917C18.7661 19.0247 19.4744 18.3567 19.5 17.5076V16.4936C19.4744 15.6449 18.7667 14.9771 17.918 15.0006H15.082C14.2333 14.9771 13.5256 15.6449 13.5 16.4936V17.5066C13.525 18.3557 14.2329 19.0241 15.082 19.0006Z" stroke={isActive ? '#009BEE' : '#8a92a6'} stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
        </svg>
      ),
      id: "1",
    },
    {
      to: "/main/replications",
      label: "Replication",
      Icon: (isActive) => (
        <svg fill={isActive ? '#009BEE' : '#8a92a6'} width="35px" height="30px" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="M9.25 6.12V4.87h-7l3-2.05-.71-1L.59 4.45A1.29 1.29 0 0 0 0 5.5a1.29 1.29 0 0 0 .59 1l3.93 2.72.71-1-3-2.06zm6.16 3.33-3.93-2.67-.71 1 3 2.06h-7v1.25h7.03l-3 2 .71 1 3.93-2.67a1.23 1.23 0 0 0 0-2.1z" />
        </svg>
      ),
      id: "1",
    },
    {
      to: "/main/alerts",
      label: "Alerts",
      Icon: (isActive) => (
        <svg width="30px" height="30px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path fill-rule="evenodd" clip-rule="evenodd" d="M9.29664 4.72727V5.25342C6.60683 6.35644 4.7276 9.97935 4.79579 13.1192L4.79577 14.8631C3.4188 16.6333 3.49982 19.2727 6.93518 19.2727H9.29664C9.29664 19.996 9.57852 20.6897 10.0803 21.2012C10.582 21.7127 11.2625 22 11.9721 22C12.6817 22 13.3622 21.7127 13.8639 21.2012C14.3656 20.6897 14.6475 19.996 14.6475 19.2727H17.0155C20.4443 19.2727 20.494 16.6278 19.1172 14.8576L19.1555 13.1216C19.2248 9.97811 17.3419 6.35194 14.6475 5.25049V4.72727C14.6475 4.00395 14.3656 3.31026 13.8639 2.7988C13.3622 2.28734 12.6817 2 11.9721 2C11.2625 2 10.582 2.28734 10.0803 2.7988C9.57852 3.31026 9.29664 4.00395 9.29664 4.72727ZM12.8639 4.72727C12.8639 4.72727 12.8633 4.76414 12.8622 4.78246C12.5718 4.74603 12.2759 4.72727 11.9757 4.72727C11.673 4.72727 11.3747 4.74634 11.082 4.78335C11.0808 4.76474 11.0803 4.74603 11.0803 4.72727C11.0803 4.48617 11.1742 4.25494 11.3415 4.08445C11.5087 3.91396 11.7356 3.81818 11.9721 3.81818C12.2086 3.81818 12.4354 3.91396 12.6027 4.08445C12.7699 4.25494 12.8639 4.48617 12.8639 4.72727ZM11.0803 19.2727C11.0803 19.5138 11.1742 19.7451 11.3415 19.9156C11.5087 20.086 11.7356 20.1818 11.9721 20.1818C12.2086 20.1818 12.4354 20.086 12.6027 19.9156C12.7699 19.7451 12.8639 19.5138 12.8639 19.2727H11.0803ZM17.0155 17.4545C17.7774 17.4545 18.1884 16.5435 17.6926 15.9538C17.4516 15.6673 17.3233 15.3028 17.3316 14.9286L17.3723 13.0808C17.4404 9.99416 15.0044 6.54545 11.9757 6.54545C8.94765 6.54545 6.51196 9.99301 6.57898 13.0789L6.61916 14.9289C6.62729 15.303 6.49893 15.6674 6.25806 15.9538C5.76221 16.5435 6.17325 17.4545 6.93518 17.4545H17.0155ZM16.9799 3.20202C17.2945 2.74813 17.9176 2.63524 18.3715 2.94988C19.5192 3.74546 20.8956 5.65348 21.6471 7.9126C21.8214 8.43664 21.5379 9.00279 21.0139 9.17712C20.4898 9.35145 19.9237 9.06795 19.7493 8.5439C19.0892 6.55949 17.9221 5.07189 17.2321 4.59358C16.7782 4.27894 16.6653 3.65592 16.9799 3.20202ZM5.4303 2.94988C5.8842 2.63524 6.50722 2.74813 6.82185 3.20202C7.13649 3.65592 7.0236 4.27894 6.56971 4.59358C5.87969 5.07189 4.71256 6.55949 4.05242 8.5439C3.87809 9.06795 3.31194 9.35145 2.78789 9.17712C2.26384 9.00279 1.98034 8.43664 2.15467 7.9126C2.90619 5.65348 4.2826 3.74546 5.4303 2.94988Z"
            fill={isActive ? '#009BEE' : '#8a92a6'} />
        </svg>
      ),
      id: "1",
    },
    {
      to: "/main/logs",
      label: "Logs",
      Icon: (isActive) => (
        <svg width="30px" height="30px" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" fill="none">
          <g fill={isActive ? '#009BEE' : '#8a92a6'}>
            <path d="M5.314 1.256a.75.75 0 01-.07 1.058L3.889 3.5l1.355 1.186a.75.75 0 11-.988 1.128l-2-1.75a.75.75 0 010-1.128l2-1.75a.75.75 0 011.058.07zM7.186 1.256a.75.75 0 00.07 1.058L8.611 3.5 7.256 4.686a.75.75 0 10.988 1.128l2-1.75a.75.75 0 000-1.128l-2-1.75a.75.75 0 00-1.058.07zM2.75 7.5a.75.75 0 000 1.5h10.5a.75.75 0 000-1.5H2.75zM2 11.25a.75.75 0 01.75-.75h10.5a.75.75 0 010 1.5H2.75a.75.75 0 01-.75-.75zM2.75 13.5a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5z" />
          </g>
        </svg>
      ),
      id: "1",
    },
    {
      to: "/main/documents",
      label: "Documents",
      Icon: (isActive) => (
        <svg width="25px" height="25px" version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 -2 50 50">
          <g fill={isActive ? '#009BEE' : '#8a92a6'}>
            <path d="M44.51,48.874H4.365C1.958,48.874,0,46.916,0,44.51V19.326c0-2.407,1.958-4.364,4.365-4.364H44.51
				          c2.407,0,4.365,1.958,4.365,4.364V44.51C48.875,46.917,46.917,48.874,44.51,48.874z M4.489,44.386h39.897V19.45H4.489V44.386z"/>
          </g>
          <g fill={isActive ? '#009BEE' : '#8a92a6'}>
            <path d="M43.878,11.969H4.997c-1.24,0-2.244-1.005-2.244-2.245c0-1.239,1.004-2.244,2.244-2.244h38.881
				          c1.239,0,2.244,1.005,2.244,2.244C46.122,10.964,45.117,11.969,43.878,11.969z"/>
          </g>
          <g fill={isActive ? '#009BEE' : '#8a92a6'}>
            <path d="M38.306,4.489H10.568c-1.24,0-2.244-1.005-2.244-2.244s1.004-2.244,2.244-2.244h27.738
				          c1.24,0,2.245,1.005,2.245,2.244S39.546,4.489,38.306,4.489z"/>
          </g>
        </svg>
      ),
      id: "1",
    },
    {
      to: "/main/reports",
      label: "Reports",
      Icon: (isActive) => (
        <svg width="30px" height="30px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path fill-rule="evenodd" clip-rule="evenodd" d="M17.2059 1.85619C16.1431 1.4375 15.116 1.72093 14.389 2.36753C13.6798 2.99824 13.25 3.96989 13.25 5.00003V9.00003C13.25 9.96653 14.0335 10.75 15 10.75H19C20.0301 10.75 21.0018 10.3202 21.6325 9.61103C22.2791 8.884 22.5625 7.85691 22.1438 6.79412C21.2558 4.53992 19.4601 2.74423 17.2059 1.85619ZM14.75 9.00003V5.00003C14.75 4.37331 15.0149 3.8183 15.3858 3.48838C15.7389 3.17435 16.1774 3.06319 16.6561 3.2518C18.5233 3.98737 20.0127 5.47673 20.7482 7.34392C20.9368 7.82268 20.8257 8.26109 20.5117 8.61418C20.1817 8.98514 19.6267 9.25003 19 9.25003H15C14.8619 9.25003 14.75 9.1381 14.75 9.00003Z" fill={isActive ? '#009BEE' : '#8a92a6'} />
          <path fill-rule="evenodd" clip-rule="evenodd" d="M10.9953 2.86997C10.3847 2.47444 9.79417 2.36057 9.1457 2.47365C8.59499 2.56967 8.00554 2.83384 7.37816 3.11499L7.31056 3.14528C6.78871 3.37898 6.28506 3.65696 5.80541 3.97745C4.11981 5.10374 2.80604 6.70457 2.03024 8.57751C1.25444 10.4505 1.05146 12.5114 1.44696 14.4997C1.84245 16.488 2.81867 18.3144 4.25216 19.7479C5.68565 21.1813 7.51202 22.1576 9.50033 22.5531C11.4886 22.9486 13.5496 22.7456 15.4225 21.9698C17.2955 21.194 18.8963 19.8802 20.0226 18.1946C20.3431 17.715 20.621 17.2113 20.8547 16.6895L20.885 16.6218C21.1662 15.9945 21.4303 15.405 21.5264 14.8543C21.6394 14.2059 21.5256 13.6153 21.1301 13.0048C20.7036 12.3466 20.1199 12.025 19.406 11.8792C18.7721 11.7498 17.98 11.7499 17.0722 11.75L15.5 11.75C14.536 11.75 13.8884 11.7484 13.4054 11.6835C12.9439 11.6214 12.7464 11.5142 12.6161 11.3839C12.4858 11.2536 12.3786 11.0561 12.3165 10.5946C12.2516 10.1116 12.25 9.46403 12.25 8.50002L12.25 6.92784C12.2501 6.02003 12.2502 5.22795 12.1208 4.59406C11.9751 3.88016 11.6534 3.29637 10.9953 2.86997ZM7.92364 4.51427C8.64284 4.19218 9.05972 4.01127 9.40336 3.95135C9.66896 3.90504 9.87762 3.93318 10.1797 4.12886C10.434 4.29366 10.5687 4.49038 10.6511 4.89407C10.7464 5.36104 10.75 5.99846 10.75 7.00002L10.75 8.55201C10.75 9.45048 10.7499 10.1997 10.8299 10.7945C10.9143 11.4223 11.1 11.9891 11.5555 12.4446C12.0109 12.9 12.5777 13.0857 13.2055 13.1701C13.8003 13.2501 14.5495 13.25 15.448 13.25L17 13.25C18.0016 13.25 18.639 13.2536 19.1059 13.3489C19.5096 13.4313 19.7064 13.566 19.8712 13.8204C20.0668 14.1224 20.095 14.3311 20.0487 14.5967C19.9887 14.9403 19.8078 15.3572 19.4858 16.0764C19.2863 16.5218 19.049 16.9518 18.7754 17.3613C17.8139 18.8002 16.4473 19.9217 14.8485 20.584C13.2496 21.2462 11.4903 21.4195 9.79296 21.0819C8.09563 20.7443 6.53653 19.9109 5.31282 18.6872C4.08911 17.4635 3.25575 15.9044 2.91813 14.2071C2.58051 12.5097 2.75379 10.7504 3.41606 9.15154C4.07833 7.55268 5.19983 6.18612 6.63876 5.22466C7.04824 4.95106 7.47817 4.71376 7.92364 4.51427Z" fill={isActive ? '#009BEE' : '#8a92a6'} />
        </svg>
      ),
      id: "1",
    },

  ]);

  const logout = {
    label: "Logout",
    Icon: (isActive) => (
      <svg width="30px" height="30px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fill-rule="evenodd" clip-rule="evenodd" d="M2 6.5C2 4.01472 4.01472 2 6.5 2H12C14.2091 2 16 3.79086 16 6V7C16 7.55228 15.5523 8 15 8C14.4477 8 14 7.55228 14 7V6C14 4.89543 13.1046 4 12 4H6.5C5.11929 4 4 5.11929 4 6.5V17.5C4 18.8807 5.11929 20 6.5 20H12C13.1046 20 14 19.1046 14 18V17C14 16.4477 14.4477 16 15 16C15.5523 16 16 16.4477 16 17V18C16 20.2091 14.2091 22 12 22H6.5C4.01472 22 2 19.9853 2 17.5V6.5ZM18.2929 8.29289C18.6834 7.90237 19.3166 7.90237 19.7071 8.29289L22.7071 11.2929C23.0976 11.6834 23.0976 12.3166 22.7071 12.7071L19.7071 15.7071C19.3166 16.0976 18.6834 16.0976 18.2929 15.7071C17.9024 15.3166 17.9024 14.6834 18.2929 14.2929L19.5858 13L11 13C10.4477 13 10 12.5523 10 12C10 11.4477 10.4477 11 11 11L19.5858 11L18.2929 9.70711C17.9024 9.31658 17.9024 8.68342 18.2929 8.29289Z" fill={isActive ? '#009BEE' : '#8a92a6'} />
      </svg>
    ),
    id: "1",
  };

  const toggleCollapse = () => {
    dispatch(saveIsCollapsed(!isCollapsed))
  };

  const location = useLocation();

  const onClickNav = (label) => {

  }

  return (
    <div className={`sidebar ${isCollapsed ? 'collapsed' : ''}`}>

        <div
          className={`profile-container ${isCollapsed ? 'hide-profile' : 'show-profile'}`}>
          {!isCollapsed && (
            <div className='profile'>
              <img
                alt={"logo"}
                src={Exported.Images.placeholder}
                className={'logo-sidebar'}
              />
              <p className='user-name'>Hafiz Hussain</p>
              <span className='role'>Admin</span>
            </div>
          )}
        </div>

      <div className={`menu-list  ${isCollapsed ? "collapsed" : ""}`}>
        {mainLinks.map(({ to, label, Icon }, index) => {
          return (
            <NavLink
              to={to}
              onClick={() => onClickNav(label)}
              style={{ textDecoration: "none" }}
              key={`${index}`}
            >
              <div
                className={`
                ${location.pathname === to
                    ? "active-sidebar-item"
                    : "in-active-sidebar-item"
                  }
                `}
              >
                <div className="side-bar-list">
                  <div className='image-container'>
                    {Icon(location.pathname == to)}
                  </div>
                  {!isCollapsed && (
                    <span
                      className={`${location.pathname === to
                        ? "active-label"
                        : "in-active-label"
                        }`}
                    >
                      {label}
                    </span>
                  )}
                </div>
              </div>
            </NavLink>
          );
        })}

        <div
          className={"in-active-sidebar-item cursor-pointer"}
          onClick={() => alert("Logout")}
        >
          <div className="side-bar-list">
            <div className='image-container'>
              {logout.Icon(false)}
            </div>
            {!isCollapsed && (
              <span
                className={"in-active-label"}
              >
                {logout.label}
              </span>
            )}
          </div>
        </div>
      </div>

      <div className="collapse-btn cursor-pointer" onClick={toggleCollapse}>
        {isCollapsed ? <BsChevronBarRight /> : <BsChevronBarLeft />}
      </div>
    </div>
  );
};

export default Sidebar;
